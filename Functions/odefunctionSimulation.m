function dCdt = odefunctionSimulation(t, C,...
    omega_M, omega_S1, omega_S2,...
    kappa_cat_M, kappa_cat_S1, kappa_SC1_M, kappa_SC1_S1, kappa_SP12_S1, kappa_SP12_S2,...
    mu, theta,theta_bi,...
    sigmab_M, sigmaf_M, sigmab_S1, sigmaf_S1,...
    kappa_SV_M, kappa_SV_S1, z_S1,z_M,...
    light_on_minus, light_on_plus, light_off_minus, light_off_plus,...
    h, z_X, N_X_Nodes,X_Nodes,...
    tau_tot, all_timesteps,...
    Cycle_Number)
%% Continouse Function for the Kappas with Mediator

    % Reduction Factor
    red_fac = 10^(-100);
    
    kappa_cat_M_ode = kappa_cat_M;
    kappa_cat_S1_ode = kappa_cat_S1;
    
    kappa_SV_M_ode = kappa_SV_M;
    kappa_SV_S1_ode = kappa_SV_S1;
    
    %kappa_cat_M_cont = kappa_cat_M
    
    array_time  = [light_on_minus, light_off_minus;...
                   light_on_plus, light_off_plus];
               
    array_kappa_on = [kappa_cat_M*red_fac, kappa_cat_S1*red_fac, kappa_SV_M*red_fac, kappa_SV_S1*red_fac;...
                      kappa_cat_M,         kappa_cat_S1,         kappa_SV_M,         kappa_SV_S1];
               
    array_kappa_off = [kappa_cat_M,         kappa_cat_S1,         kappa_SV_M,         kappa_SV_S1;...
                       kappa_cat_M*red_fac, kappa_cat_S1*red_fac, kappa_SV_M*red_fac, kappa_SV_S1*red_fac];
    
    if t >= 0 && t < light_on_minus
        kappa_cat_M_ode = kappa_cat_M*red_fac;
        kappa_cat_S1_ode = kappa_cat_S1*red_fac;
        
        kappa_SV_M_ode = kappa_SV_M*red_fac;
        kappa_SV_S1_ode = kappa_SV_S1*red_fac;
        
    elseif t >= light_on_minus && t <= light_on_plus
        
        kappa_cat_M_ode = interp1(array_time(1:2,1),array_kappa_on(1:2,1),t);
        kappa_cat_S1_ode = interp1(array_time(1:2,1),array_kappa_on(1:2,2),t);
        
        kappa_SV_M_ode = interp1(array_time(1:2,1),array_kappa_on(1:2,3),t);
        kappa_SV_S1_ode = interp1(array_time(1:2,1),array_kappa_on(1:2,4),t);
        
    elseif t > light_on_plus && t < light_off_minus
        kappa_cat_M_ode = kappa_cat_M;
        kappa_cat_S1_ode = kappa_cat_S1;
        
        kappa_SV_M_ode = kappa_SV_M;
        kappa_SV_S1_ode = kappa_SV_S1;
        
    elseif t >= light_off_minus && t <= light_off_plus
        
        kappa_cat_M_ode = interp1(array_time(1:2,2),array_kappa_off(1:2,1),t);
        kappa_cat_S1_ode = interp1(array_time(1:2,2),array_kappa_off(1:2,2),t);
        
        kappa_SV_M_ode = interp1(array_time(1:2,2),array_kappa_off(1:2,3),t);
        kappa_SV_S1_ode = interp1(array_time(1:2,2),array_kappa_off(1:2,4),t);
        
    elseif t > light_off_plus && t <= 1
        kappa_cat_M_ode = kappa_cat_M*red_fac;
        kappa_cat_S1_ode = kappa_cat_S1*red_fac;
        
        kappa_SV_M_ode = kappa_SV_M*red_fac;
        kappa_SV_S1_ode = kappa_SV_S1*red_fac;
        
    elseif t > 1 
        disp('Error: Dimensionless Time is greater than 1')
        return  
    elseif t < 0 
        disp('Error: Dimensionless Time is smaller than 0')
        return  
    else 
        disp('Error: The rates for the mediators reactions aren''t continuous') 
        return   
    end

%     disp('Cycle =') 
%     disp(Cycle_Number)
%     disp('Current Time =') 
%     disp(t)
    
    %tau_tot = 1 + tau_eq + tau_rec;
    
%% Case for no light induced reaction

%% Definiton of the concentration time profile 
    
    
    dCdt = zeros(N_X_Nodes*3,1);  % pre-allocation the change in time array: 1-2001 is M, 2002-4002 is S1, 4003-6003 is S2
 
%% Mediator

    for i = 1
        i_M = i;
        i_S1 = i+N_X_Nodes;
        i_S2= i+(2*N_X_Nodes);
        
        dCdt(i_M,1)  = (tau_tot/omega_M)*...
                     (...
                       ((2 * (C(i_M+1) - C(i_M)))                     / (((z_X+1)^2) * h(i) * (h(i))))...
                     - ((2 * (sigmab_M*C(i_M) - sigmaf_M*(1-C(i_M)))) / ( (z_X+1)    * h(i)         ))...
                     - (z_S1)*(kappa_cat_M_ode*C(i_M)*C(i_S1)) / ((1/z_S1)*mu*C(i_M)+(1/z_S1)*C(i_M)*C(i_S1)+theta*C(i_S1))...
                     - (z_S1)*(kappa_SV_M_ode*C(i_M)*C(i_S1)) / ((1/z_S1)*C(i_M)+theta_bi*C(i_S1))...
                     + (z_S1/z_M) * kappa_SC1_M    * (1-C(i_M)) * (1-C(i_S1))...
                    );
        dCdt(i_S1,1) = (tau_tot/omega_S1) *...
                     (...
                       ((2 * (C(i_S1+1) - C(i_S1)))                       / (((z_X+1)^2) * h(i) * h(i)))...
                     - ((2 * (sigmaf_S1*C(i_S1) - sigmab_S1*(1-C(i_S1)))) / ( (z_X+1)    * h(i)       ))...
                     - (1/z_S1)*(kappa_cat_S1_ode*C(i_M)*C(i_S1)) / ((1/z_S1)*mu*C(i_M)+(1/z_S1)*C(i_M)*C(i_S1)+theta*C(i_S1))...
                     - (1/z_S1)*(kappa_SV_S1_ode*C(i_M)*C(i_S1)) / ((1/z_S1)*(theta_bi)^(-1)*C(i_M)+C(i_S1))...
                     + (z_M/z_S1)*kappa_SC1_S1    * (1-C(i_M)) * (1-C(i_S1))...
                     + kappa_SP12_S1   * C(i_S2)    * (1-C(i_S1))...
                    );     
        dCdt(i_S2,1) = (tau_tot/omega_S2) *...
                     (...
                       ((2 * (C(i_S2+1) - C(i_S2)))   / (h(i) * ((z_X+1)^2) * h(i)  ))....
                     - kappa_SP12_S2 * C(i_S2) * (1-C(i_S1))...
                     );                
    end

    for i = 2:((N_X_Nodes-1)/2)
        i_M = i;
        i_S1 = i+N_X_Nodes;
        i_S2= i+(2*N_X_Nodes);
        
        dCdt(i_M,1)  = (tau_tot/omega_M) *...
                     (...
                       ((2 * (C(i_M+1) - C(i_M)))   / ((h(i)+h(i-1)) * ((z_X+1)^2) * h(i)  ))...
                     - ((2 * (C(i_M)   - C(i_M-1))) / ((h(i)+h(i-1)) * ((z_X+1)^2) * h(i-1)))...
                     - (z_S1)*(kappa_cat_M_ode*C(i_M)*C(i_S1)) / ((1/z_S1)*mu*C(i_M)+(1/z_S1)*C(i_M)*C(i_S1)+theta*C(i_S1))...
                     - (z_S1)*(kappa_SV_M_ode*C(i_M)*C(i_S1)) / ((1/z_S1)*C(i_M)+theta_bi*C(i_S1))...
                     + (z_S1/z_M)*kappa_SC1_M    * (1-C(i_M)) * (1-C(i_S1))...
                     );
        dCdt(i_S1,1) = (tau_tot/omega_S1) *...
                     (...
                       ((2 * (C(i_S1+1) - C(i_S1)))   / ((h(i)+h(i-1)) * ((z_X+1)^2) * h(i)  ))...
                     - ((2 * (C(i_S1)   - C(i_S1-1))) / ((h(i)+h(i-1)) * ((z_X+1)^2) * h(i-1)))...
                     - (1/z_S1)*(kappa_cat_S1_ode*C(i_M)*C(i_S1)) / ((1/z_S1)*mu*C(i_M)+(1/z_S1)*C(i_M)*C(i_S1)+theta*C(i_S1))...
                     - (1/z_S1)*(kappa_SV_S1_ode*C(i_M)*C(i_S1)) / ((1/z_S1)*(theta_bi)^(-1)*C(i_M)+C(i_S1))...
                     + (z_M/z_S1)*kappa_SC1_S1    * (1-C(i_M)) * (1-C(i_S1))...
                     + kappa_SP12_S1   * C(i_S2)    * (1-C(i_S1))...
                     );   
        dCdt(i_S2,1) = (tau_tot/omega_S2) *...
                     (...
                       ((2 * (C(i_S2+1) - C(i_S2)))   / ((h(i)+h(i-1)) * ((z_X+1)^2) * h(i)  ))...
                     - ((2 * (C(i_S2)   - C(i_S2-1))) / ((h(i)+h(i-1)) * ((z_X+1)^2) * h(i-1)))...
                     - kappa_SP12_S2 * C(i_S2) * (1-C(i_S1))...
                     );
    end
    
    for i = (((N_X_Nodes-1)/2)+1)
        i_M = i;
        i_S1 = i+N_X_Nodes;
        i_S2= i+(2*N_X_Nodes);
        
        dCdt(i_M,1)  = (tau_tot/omega_M) *...
                     (...
                     - ((2 * (C(i_M)-C(i_M-1))) / (h(i-1) * ((z_X+1)^2) * h(i-1)))...
                     - ((z_S1)*(kappa_cat_M_ode*C(i_M)*C(i_S1)) / ((1/z_S1)*mu*C(i_M)+(1/z_S1)*C(i_M)*C(i_S1)+theta*C(i_S1)))* (h(i-1)/(h(i-1)+h(i)))...
                     - ((z_S1)*(kappa_SV_M_ode*C(i_M)*C(i_S1)) / ((1/z_S1)*C(i_M)+theta_bi*C(i_S1))) * (h(i-1)/(h(i-1)+h(i)))...
                     + (z_S1/z_M)*kappa_SC1_M    * (1-C(i_M)) * (1-C(i_S1)) * (h(i-1)/(h(i-1)+h(i)))...
                     );      
        dCdt(i_S1,1) = (tau_tot/omega_S1)*...
                     (...
                       ((2 * (C(i_S1+1) - C(i_S1)))   / ((h(i-1)+h(i)) * ((z_X+1)^2) * h(i)  ))...
                     - ((2 * (C(i_S1)   - C(i_S1-1))) / ((h(i-1)+h(i)) * ((z_X+1)^2) * h(i-1)))...
                     - ((1/z_S1)*(kappa_cat_S1_ode*C(i_M)*C(i_S1)) / ((1/z_S1)*mu*C(i_M)+(1/z_S1)*C(i_M)*C(i_S1)+theta*C(i_S1))) * (h(i-1)/(h(i-1)+h(i)))...
                     - ((1/z_S1)*(kappa_SV_S1_ode*C(i_M)*C(i_S1)) / ((1/z_S1)*(theta_bi)^(-1)*C(i_M)+C(i_S1))) * (h(i-1)/(h(i-1)+h(i)))...
                     + (z_M/z_S1) * kappa_SC1_S1    * (1-C(i_M))* (1-C(i_S1)) * (h(i-1)/(h(i-1)+h(i)))...
                     + kappa_SP12_S1   * C(i_S2)   * (1-C(i_S1))...
                     );
        dCdt(i_S2,1) = (tau_tot/omega_S2) *...
                     (...
                       ((2 * (C(i_S2+1) - C(i_S2)))   / ((h(i)+h(i-1)) * ((z_X+1)^2) * h(i)  ))...
                     - ((2 * (C(i_S2)   - C(i_S2-1))) / ((h(i)+h(i-1)) * ((z_X+1)^2) * h(i-1)))...
                     - kappa_SP12_S2 * C(i_S2) * (1-C(i_S1))...
                     );                 
                 
    end
    
    for i = (((N_X_Nodes-1)/2)+2):(N_X_Nodes-1)
        i_M = i;
        i_S1 = i+N_X_Nodes;
        i_S2= i+(2*N_X_Nodes);
        
        dCdt(i_M,1)  = 0;
        dCdt(i_S1,1) = (tau_tot/omega_S1) *...
                     (...
                       ((2 * (C(i_S1+1) - C(i_S1)))   / ((h(i)+h(i-1)) * ((z_X+1)^2) * h(i)  ))...
                     - ((2 * (C(i_S1)   - C(i_S1-1))) / ((h(i)+h(i-1)) * ((z_X+1)^2) * h(i-1)))...
                     +  kappa_SP12_S1 * C(i_S2) * (1-C(i_S1))...
                     );  
        dCdt(i_S2,1) = (tau_tot/omega_S2) *...
                     (...
                       ((2 * (C(i_S2+1) - C(i_S2)))   / ((h(i)+h(i-1)) * ((z_X+1)^2) * h(i)  ))...
                     - ((2 * (C(i_S2)   - C(i_S2-1))) / ((h(i)+h(i-1)) * ((z_X+1)^2) * h(i-1)))....
                     - kappa_SP12_S2 * C(i_S2) * (1-C(i_S1))...
                     );                 
               
    end
    
    for i = N_X_Nodes
        i_M = i;
        i_S1 = i+N_X_Nodes;
        i_S2= i+(2*N_X_Nodes);
        
        dCdt(i_M,1)  = 0;
        dCdt(i_S1,1) = 0; 
        dCdt(i_S2,1) = 0;    
    end
end

    
    
    

        